00:00:00,439 --> 00:00:04,319
mmm-hmm I am excited today you know why

00:00:03,270 --> 00:00:06,29
because we're gonna use so many

00:00:04,319 --> 00:00:09,840
technologies we're gonna learn about

00:00:06,29 --> 00:00:12,870
Mongo Express nodejs

00:00:09,840 --> 00:00:14,130
to put together a full-on REST API I

00:00:12,870 --> 00:00:15,150
don't worry if you don't know anything

00:00:14,130 --> 00:00:16,680
about these we're gonna learn how to

00:00:15,150 --> 00:00:18,720
connect to database we're gonna learn

00:00:16,680 --> 00:00:20,880
how to make route and make API calls and

00:00:18,720 --> 00:00:22,680
all the good stuff oh and since to you

00:00:20,880 --> 00:00:25,19
guys like the last magic trick hey that

00:00:22,680 --> 00:00:26,310
hold up hold up I got you so since we're

00:00:25,19 --> 00:00:28,400
learning with tree technologies today

00:00:26,310 --> 00:00:36,600
once we learn them we're gonna become

00:00:28,400 --> 00:00:38,489
kings hello it's me Maria anyway okay

00:00:36,600 --> 00:00:41,460
let's get going here

00:00:38,489 --> 00:00:43,110
let's create a REST API so the first

00:00:41,460 --> 00:00:46,110
thing I'm gonna do is I'm gonna go to

00:00:43,110 --> 00:00:47,969
terminal here and I'm just gonna npm in

00:00:46,110 --> 00:00:50,670
it which is gonna generate us that

00:00:47,969 --> 00:00:53,370
package JSON file which does actually

00:00:50,670 --> 00:00:55,789
not too much but it just holds us the

00:00:53,370 --> 00:00:58,170
dependency so Hiram's is gonna hit enter

00:00:55,789 --> 00:01:00,840
10,000 times until we have this package

00:00:58,170 --> 00:01:03,270
JSON okay so this holds again all the

00:01:00,840 --> 00:01:06,360
packages packages that we're gonna get

00:01:03,270 --> 00:01:08,280
from the internet and the first package

00:01:06,360 --> 00:01:11,490
I'm gonna install is something called

00:01:08,280 --> 00:01:14,310
Express so let's do NPM install Express

00:01:11,490 --> 00:01:16,200
like so I kinda it kind of reminds me of

00:01:14,310 --> 00:01:19,439
Polar Express let me know if you've seen

00:01:16,200 --> 00:01:22,49
that in the comments okay so Express and

00:01:19,439 --> 00:01:23,729
the other one is node Mon and hit enter

00:01:22,49 --> 00:01:25,920
so we can install multiple multiple

00:01:23,729 --> 00:01:28,380
packages here just by adding a space and

00:01:25,920 --> 00:01:30,420
then the other packages name you can

00:01:28,380 --> 00:01:32,40
also add that node Mon into your dev

00:01:30,420 --> 00:01:34,20
dependencies if that's something you

00:01:32,40 --> 00:01:37,140
wish but for now this is gonna be super

00:01:34,20 --> 00:01:39,270
simple and it's gonna be fine so after

00:01:37,140 --> 00:01:41,790
everything is installed we can close up

00:01:39,270 --> 00:01:44,189
this terminal a bit and we can go to

00:01:41,790 --> 00:01:48,90
package dot JSON here and as you can see

00:01:44,189 --> 00:01:50,40
it holds our packages Wow amazing good

00:01:48,90 --> 00:01:51,899
job packages and you're doing your job

00:01:50,40 --> 00:01:54,240
okay the first thing we're gonna do is

00:01:51,899 --> 00:01:57,659
I'm gonna remove this script here and

00:01:54,240 --> 00:01:59,640
I'm gonna add a start okay and here make

00:01:57,659 --> 00:02:01,229
sure to add double quotes here here and

00:01:59,640 --> 00:02:02,520
here as well because it's not gonna work

00:02:01,229 --> 00:02:05,9
if you're not gonna do that

00:02:02,520 --> 00:02:07,409
don't blame me for it I'm not the reason

00:02:05,9 --> 00:02:10,979
why doesn't work and here we can just

00:02:07,409 --> 00:02:12,989
add node Mon fjs which we are going to

00:02:10,979 --> 00:02:13,319
create now so this is a script that's

00:02:12,989 --> 00:02:15,719
going to

00:02:13,319 --> 00:02:18,870
helped us execute and run our server

00:02:15,719 --> 00:02:22,170
okay that's all it does close that up

00:02:18,870 --> 00:02:25,139
we're gonna create a new file called fjs

00:02:22,170 --> 00:02:28,409
now if you remember again we did it like

00:02:25,139 --> 00:02:31,519
so if you added the HTTP we require the

00:02:28,409 --> 00:02:35,159
HTTP and then we created the server and

00:02:31,519 --> 00:02:38,219
Jesus Christ okay nobody wants to do

00:02:35,159 --> 00:02:40,19
that so now look at Express it's gonna

00:02:38,219 --> 00:02:42,269
be very awesome so the first thing we're

00:02:40,19 --> 00:02:44,909
gonna do is we're gonna import Express

00:02:42,269 --> 00:02:46,950
by saying cost Express equals to require

00:02:44,909 --> 00:02:50,40
Express that just gets us the package

00:02:46,950 --> 00:02:52,99
into this file the second thing we are

00:02:50,40 --> 00:02:55,500
going to do is we are going to execute

00:02:52,99 --> 00:02:57,510
this Express so the way you're gonna see

00:02:55,500 --> 00:02:59,370
online and everywhere is people are

00:02:57,510 --> 00:03:01,739
gonna create this app variable and

00:02:59,370 --> 00:03:05,310
they're gonna just execute Express on

00:03:01,739 --> 00:03:09,359
top of it and now you have the ability

00:03:05,310 --> 00:03:11,370
to create routes in a very very simple

00:03:09,359 --> 00:03:14,400
way so I'm just gonna add a comment here

00:03:11,370 --> 00:03:17,549
with routes okay if if you're blind like

00:03:14,400 --> 00:03:19,739
me I'm gonna zoom in a bit there we go

00:03:17,549 --> 00:03:23,250
hopefully this is a bit more visible now

00:03:19,739 --> 00:03:28,790
and let's create a route but before we

00:03:23,250 --> NaN:NaN:NaN,NaN
create a route how do we start listening

00:03:29,120 --> 00:03:34,590
listening to the server like how do we

00:03:31,859 --> 00:03:35,549
boot up the server well look at this

00:03:34,590 --> 00:03:37,439
it's super simple

00:03:35,549 --> 00:03:39,959
all you have to do say app dot listen

00:03:37,439 --> 00:03:41,790
and you give a deed name that the port

00:03:39,959 --> 00:03:44,189
name that you want to listen to so for

00:03:41,790 --> 00:03:46,439
example three thousand and done that's

00:03:44,189 --> 00:03:47,939
it now we can create a route and I'm

00:03:46,439 --> 00:03:49,680
gonna explain what's happening here in

00:03:47,939 --> 00:03:52,439
just a bit for now let's just create

00:03:49,680 --> 00:03:56,790
that we can do app get and you can pass

00:03:52,439 --> 00:03:58,769
a route add a comma here and then you

00:03:56,790 --> 00:04:01,349
have your request and response like we

00:03:58,769 --> 00:04:04,79
did in node and now I can just send a

00:04:01,349 --> 00:04:08,780
message if I want with response so res

00:04:04,79 --> 00:04:12,810
dots and I'll just say we are on home

00:04:08,780 --> 00:04:14,819
okay the home home slash home URL okay

00:04:12,810 --> 00:04:17,849
and that's it we can reopen up the

00:04:14,819 --> 00:04:20,39
terminal or up here if you want and we

00:04:17,849 --> 00:04:22,760
can just do NPM start so we are running

00:04:20,39 --> 00:04:25,980
that script from package thought Jason

00:04:22,760 --> 00:04:28,140
perfect let's take a look in here

00:04:25,980 --> 00:04:30,870
as you can see if I hit enter we have

00:04:28,140 --> 00:04:33,510
the message we are on home so everything

00:04:30,870 --> 00:04:36,0
works wow that's that's that's pretty

00:04:33,510 --> 00:04:37,620
cool it's like three lines of code so

00:04:36,0 --> 00:04:41,730
what's happening here well we import the

00:04:37,620 --> 00:04:43,770
package we execute it and with that we

00:04:41,730 --> 00:04:46,530
can create routes so we can use this app

00:04:43,770 --> 00:04:50,550
to create routes now yet all it means is

00:04:46,530 --> 00:04:52,230
that it shoots us back a message if we

00:04:50,550 --> 00:04:54,930
want to send a message so like

00:04:52,230 --> 00:04:57,330
submitting a form like a login form then

00:04:54,930 --> 00:04:59,910
we would use something like post okay

00:04:57,330 --> 00:05:01,800
that gives it we can also delete

00:04:59,910 --> 00:05:04,500
something so you can imagine we have a

00:05:01,800 --> 00:05:07,140
post list then I want to remove a

00:05:04,500 --> 00:05:09,960
certain post I can use delete and in

00:05:07,140 --> 00:05:12,720
here you would add a logic to remove

00:05:09,960 --> 00:05:14,280
that post and we have delete and we also

00:05:12,720 --> 00:05:19,140
have something called patch which

00:05:14,280 --> 00:05:21,180
updates for example a post okay so you

00:05:19,140 --> 00:05:23,190
would use patch for updating the lead

00:05:21,180 --> 00:05:26,340
for deleting gets to get the information

00:05:23,190 --> 00:05:30,480
post to give the information yeah and in

00:05:26,340 --> 00:05:31,950
here the first parameter we have is the

00:05:30,480 --> 00:05:35,280
route that we want to go to

00:05:31,950 --> 00:05:36,660
so this executes when we go to slash so

00:05:35,280 --> 00:05:39,510
just localhost

00:05:36,660 --> 00:05:42,690
so nothing here if I want maybe this to

00:05:39,510 --> 00:05:45,330
go to slash posts like this slash post I

00:05:42,690 --> 00:05:46,950
would create another route to do that so

00:05:45,330 --> 00:05:50,910
I can copy this and paste it down here

00:05:46,950 --> 00:05:53,430
and I can add posts like so and now I

00:05:50,910 --> 00:05:56,820
can change this we are on home - we are

00:05:53,430 --> 00:05:59,190
on posts and go back here and now if I

00:05:56,820 --> 00:06:01,740
go to posts and hit enter we are on

00:05:59,190 --> 00:06:04,800
posts so as you can see it's super super

00:06:01,740 --> 00:06:07,290
easy to create these routes with Express

00:06:04,800 --> 00:06:10,560
and as you can see here here all we do

00:06:07,290 --> 00:06:15,240
is just respond to the user by sending a

00:06:10,560 --> 00:06:18,180
message here which is a string Wow super

00:06:15,240 --> 00:06:19,920
cool okay there's another concept that

00:06:18,180 --> 00:06:24,0
we need to talk about before we can

00:06:19,920 --> 00:06:27,450
create this this REST API is something

00:06:24,0 --> 00:06:30,90
called middlewares in an express and

00:06:27,450 --> 00:06:32,430
although middleware is you can imagine

00:06:30,90 --> 00:06:35,800
it as just being a function that

00:06:32,430 --> 00:06:39,910
executes when a specific

00:06:35,800 --> 00:06:42,520
when routes are being hit and let's say

00:06:39,910 --> 00:06:44,319
when we are hitting this slash here we

00:06:42,520 --> 00:06:47,560
can run a function that's always gonna

00:06:44,319 --> 00:06:49,419
execute when we hit this route so let's

00:06:47,560 --> 00:06:51,550
take a look on how we can do that and we

00:06:49,419 --> 00:06:54,520
can kind of restrict it so for example

00:06:51,550 --> 00:06:56,440
for it to only hit when we are on posts

00:06:54,520 --> 00:06:58,270
so let's take a look let's do it with

00:06:56,440 --> 00:07:00,370
the posts so the way you can create a

00:06:58,270 --> 00:07:03,490
middleware is you just say add dot use

00:07:00,370 --> 00:07:06,400
and here you specify the route that you

00:07:03,490 --> 00:07:08,770
want it to execute we can do posts and

00:07:06,400 --> 00:07:11,349
then here we can just create a function

00:07:08,770 --> 00:07:13,900
and let's say whenever we hit this post

00:07:11,349 --> 00:07:19,110
I can always run this function and I'm

00:07:13,900 --> 00:07:22,539
just gonna say hello this is a

00:07:19,110 --> 00:07:25,900
middleware running all right so we can

00:07:22,539 --> 00:07:28,930
add some logic here to run every time we

00:07:25,900 --> 00:07:31,750
hit this post so hit save and let's take

00:07:28,930 --> 00:07:33,940
a look here when we are on home and hit

00:07:31,750 --> 00:07:36,69
enter let's take a look what we have in

00:07:33,940 --> 00:07:38,969
our console and we don't have anything

00:07:36,69 --> 00:07:43,300
so that's good but when we go to posts

00:07:38,969 --> 00:07:45,729
slash posts hit enter look at that now

00:07:43,300 --> 00:07:47,830
we have this is a middleware running so

00:07:45,729 --> 00:07:48,820
we can execute these small functions and

00:07:47,830 --> 00:07:51,820
you're gonna see that we're gonna use

00:07:48,820 --> 00:07:53,770
some packages to add as middlewares

00:07:51,820 --> 00:07:56,110
even like authentification you can

00:07:53,770 --> 00:07:59,110
imagine that we can use like some

00:07:56,110 --> 00:08:03,250
identification and here aught so every

00:07:59,110 --> 00:08:05,380
time we hit a route then this is always

00:08:03,250 --> 00:08:07,479
gonna check if the user is authenticated

00:08:05,380 --> 00:08:10,810
you know so every time we go to a

00:08:07,479 --> 00:08:12,990
specific route this is gonna run okay so

00:08:10,810 --> 00:08:15,370
that's kind of the point of middlewares

00:08:12,990 --> 00:08:17,110
alright let's remove this because we

00:08:15,370 --> 00:08:17,680
don't need that to console.log it's

00:08:17,110 --> 00:08:20,800
pointless

00:08:17,680 --> 00:08:25,719
and the first thing we are gonna do is

00:08:20,800 --> 00:08:28,479
we are gonna let's let's connect to a

00:08:25,719 --> 00:08:30,969
database so to connect to a database

00:08:28,479 --> 00:08:33,70
we're gonna use MongoDB and Mongoose

00:08:30,969 --> 00:08:35,700
which is a package that's gonna help us

00:08:33,70 --> 00:08:38,919
make everything way way easier and

00:08:35,700 --> 00:08:41,770
MongoDB is actually a document type

00:08:38,919 --> 00:08:43,390
which doesn't really have relations so

00:08:41,770 --> 00:08:46,480
you can imagine it as being it just a

00:08:43,390 --> 00:08:48,610
one huge object that's pouring a lot of

00:08:46,480 --> 00:08:49,690
information so you don't have like

00:08:48,610 --> 00:08:52,170
relations and pay

00:08:49,690 --> 00:08:54,100
and things of that sort of you know SQL

00:08:52,170 --> 00:08:57,100
Mongoose kind of gives you that ability

00:08:54,100 --> 00:08:58,900
and it makes connecting to a database

00:08:57,100 --> 00:09:00,910
and everything very easy so we're gonna

00:08:58,900 --> 00:09:02,680
use that for now just because of its

00:09:00,910 --> 00:09:06,10
simplicity so I'm gonna close up the

00:09:02,680 --> 00:09:10,450
server by doing ctrl C and we're gonna

00:09:06,10 --> 00:09:15,760
install NPM install Mongoose here it's M

00:09:10,450 --> 00:09:19,420
o n G o OS e there we go hit enter and

00:09:15,760 --> 00:09:21,580
let that sucker install and now what

00:09:19,420 --> 00:09:24,280
we're gonna do is we are gonna go to

00:09:21,580 --> 00:09:27,910
something called M lab so let's go to M

00:09:24,280 --> 00:09:32,20
lab dot-com and here we can use a free

00:09:27,910 --> 00:09:34,90
database it gives us like half a

00:09:32,20 --> 00:09:36,850
gigabyte which is very nice just to kind

00:09:34,90 --> 00:09:38,650
of experiment and prototype with it okay

00:09:36,850 --> 00:09:40,900
so we're now gonna download it and

00:09:38,650 --> 00:09:44,860
because it can get kind of complicated

00:09:40,900 --> 00:09:46,540
there to make it make it work so

00:09:44,860 --> 00:09:49,30
depending if you're on Windows or Mac OS

00:09:46,540 --> 00:09:51,280
so let's let's keep it simple for now

00:09:49,30 --> 00:09:53,910
let's just go on M lab you can create an

00:09:51,280 --> 00:09:58,270
account and once you're on your account

00:09:53,910 --> 00:10:02,260
then you can go up here to manage and we

00:09:58,270 --> 00:10:04,600
can create a new server a database so we

00:10:02,260 --> 00:10:07,900
can go here to create new we're gonna

00:10:04,600 --> 00:10:10,510
hit that and now we can go to sandbox

00:10:07,900 --> 00:10:13,480
here which is free we can head down here

00:10:10,510 --> 00:10:16,210
continue and we can choose a server I'm

00:10:13,480 --> 00:10:18,160
gonna use Europe hit next we can give it

00:10:16,210 --> 00:10:20,860
a name I'm gonna give it a rest

00:10:18,160 --> 00:10:23,170
that's gonna be the name and hit submit

00:10:20,860 --> 00:10:27,940
and there we go that's gonna give us the

00:10:23,170 --> 00:10:30,820
database let's wait a bit there we go

00:10:27,940 --> 00:10:33,700
and it's in progress which is fine until

00:10:30,820 --> 00:10:35,470
that happens but it should happen quite

00:10:33,700 --> 00:10:37,660
quickly actually there we go

00:10:35,470 --> 00:10:40,360
okay gave you a refresh I'm gonna hit

00:10:37,660 --> 00:10:43,780
click on it and the way we can connect

00:10:40,360 --> 00:10:45,970
to it is with this link up here it says

00:10:43,780 --> 00:10:47,950
to connect use driver blah blah blah

00:10:45,970 --> 00:10:49,960
blah here okay so this is what we need

00:10:47,950 --> 00:10:52,990
here but as you can see it's gonna ask

00:10:49,960 --> 00:10:55,89
us for a DB user and a password so this

00:10:52,990 --> 00:10:56,710
is something that we need to create now

00:10:55,89 --> 00:10:59,110
how can you create that all you have to

00:10:56,710 --> 00:11:01,930
do is go here to the users so click on

00:10:59,110 --> 00:11:03,370
this one and you can add a database user

00:11:01,930 --> 00:11:05,589
so this is

00:11:03,370 --> 00:11:07,180
just so you can access this that

00:11:05,589 --> 00:11:09,430
database you can have multiple people

00:11:07,180 --> 00:11:12,520
here that can access your database for

00:11:09,430 --> 00:11:17,20
now let's just do test boy and I'm gonna

00:11:12,520 --> 00:11:20,440
do 1 2 3 4 5 6 and password must contain

00:11:17,20 --> 00:11:25,510
at least one alphabetic character I'm

00:11:20,440 --> 00:11:28,360
gonna do Rhino 94 Rhino 94 that's fine

00:11:25,510 --> 00:11:32,710
create ok perfect we have that now the

00:11:28,360 --> 00:11:35,550
problem is that we cannot store this URL

00:11:32,710 --> 00:11:40,779
with the password and the DB user and

00:11:35,550 --> 00:11:43,210
here when we connect because well people

00:11:40,779 --> 00:11:45,130
when we push up this code people can see

00:11:43,210 --> 00:11:48,520
the user name and the password so that's

00:11:45,130 --> 00:11:51,250
not good so the way we can hide that is

00:11:48,520 --> 00:11:55,720
by installing a package we can do NPM

00:11:51,250 --> 00:11:58,600
install dot and E and V so dot M okay

00:11:55,720 --> 00:12:01,120
hit install there we go we're gonna wait

00:11:58,600 --> 00:12:03,190
for it for a bit and let's try to

00:12:01,120 --> 00:12:05,500
connect to our database so let's go down

00:12:03,190 --> 00:12:10,270
here and for now we're gonna hard code

00:12:05,500 --> 00:12:13,870
it and I'm gonna just add connect to DB

00:12:10,270 --> 00:12:16,720
here like so and the way we can do that

00:12:13,870 --> 00:12:20,640
is we can import this mongoose package

00:12:16,720 --> 00:12:24,130
so Mongoose equals to require Mongoose

00:12:20,640 --> 00:12:28,480
perfect and down here what we can do is

00:12:24,130 --> 00:12:31,510
just say Mongoose dot connect and then

00:12:28,480 --> 00:12:35,350
we can pass and that URL so let's go

00:12:31,510 --> 00:12:37,300
back here and let's copy this and we're

00:12:35,350 --> 00:12:38,860
gonna change this later a bit so don't

00:12:37,300 --> 00:12:42,820
worry I'm not gonna hard code this in

00:12:38,860 --> 00:12:44,339
here but what you do is you just change

00:12:42,820 --> 00:12:48,610
this dbusername'

00:12:44,339 --> 00:12:52,209
all you do is add your username and

00:12:48,610 --> 00:12:55,990
password that you added on em lab so in

00:12:52,209 --> 00:12:58,29
here I added Rhino 94 and what you can

00:12:55,990 --> 00:13:00,130
also be here after this string you can

00:12:58,29 --> 00:13:05,470
pass an arrow function and just

00:13:00,130 --> 00:13:09,910
console.log I just console.log connected

00:13:05,470 --> 00:13:13,60
to dB okay just a quick message to let

00:13:09,910 --> 00:13:15,579
us know that everything works here okay

00:13:13,60 --> 00:13:17,20
that's that's it let's open up our

00:13:15,579 --> 00:13:20,20
console here in the same and

00:13:17,20 --> 00:13:24,220
p.m. start and let's see if we get that

00:13:20,20 --> 00:13:25,930
message so there we go connected to DB

00:13:24,220 --> 00:13:29,410
and we're getting this deprecation

00:13:25,930 --> 00:13:31,300
warning here and we can fix that by they

00:13:29,410 --> 00:13:33,940
just say that you need to pass this new

00:13:31,300 --> 00:13:36,70
URL parser so we're just gonna copy this

00:13:33,940 --> 00:13:38,170
from here and I'm just gonna pass it

00:13:36,70 --> 00:13:41,980
next to here okay and then I'm gonna add

00:13:38,170 --> 00:13:44,260
a comma right after right before this

00:13:41,980 --> 00:13:47,440
arrow function so let me go back here so

00:13:44,260 --> 00:13:49,960
I just add the comma actually let me hit

00:13:47,440 --> 00:13:52,870
save okay so we just pass the string we

00:13:49,960 --> 00:13:55,450
add this object here with new our URL

00:13:52,870 --> 00:13:58,0
parser and then we have our function

00:13:55,450 --> 00:13:59,280
here to just say hey we connected and as

00:13:58,0 --> 00:14:02,380
you can see now we don't have that

00:13:59,280 --> 00:14:05,380
deprecation warning any more perfect now

00:14:02,380 --> 00:14:09,880
again we don't want a hard code this so

00:14:05,380 --> 00:14:12,970
we installed that that dot E and V

00:14:09,880 --> 00:14:16,480
package story we can hide this is we can

00:14:12,970 --> 00:14:22,630
create a dot e MV file and here I can

00:14:16,480 --> 00:14:25,570
add a a kind of special message here or

00:14:22,630 --> 00:14:28,780
a key or a code or anything that I don't

00:14:25,570 --> 00:14:30,790
want anybody to see and and the way we

00:14:28,780 --> 00:14:35,460
can do that is I can just give it a name

00:14:30,790 --> 00:14:38,590
so for example this is DB connection

00:14:35,460 --> 00:14:43,330
connection okay and I can set this equal

00:14:38,590 --> 00:14:45,880
to this text in here so I'm gonna copy

00:14:43,330 --> 00:14:49,0
this and paste it in here okay so this

00:14:45,880 --> 00:14:51,760
is how it looks and we can hit save and

00:14:49,0 --> 00:14:54,820
now to use this again remember we are

00:14:51,760 --> 00:14:58,540
not gonna push this code up to github or

00:14:54,820 --> 00:14:59,980
anything that's not EMV so because

00:14:58,540 --> 00:15:02,110
people are gonna see our password and

00:14:59,980 --> 00:15:07,90
everything so we can just get rid of

00:15:02,110 --> 00:15:10,660
this and the way we can use it is by

00:15:07,90 --> 00:15:14,20
going up here and requiring that dot EMV

00:15:10,660 --> 00:15:17,50
package like so and we're gonna add a

00:15:14,20 --> 00:15:19,30
slash convict okay here you don't need

00:15:17,50 --> 00:15:22,900
to create a variable name before it it's

00:15:19,30 --> 00:15:25,870
just gonna work and once you require

00:15:22,900 --> 00:15:30,310
this package we have access to this dot

00:15:25,870 --> 00:15:37,360
E and V this DB connection here by right

00:15:30,310 --> 00:15:38,260
process dot e MV dot DB connection okay

00:15:37,360 --> 00:15:41,440
that's it

00:15:38,260 --> 00:15:44,170
hit save let's take a look are we still

00:15:41,440 --> 00:15:46,690
connecting Hey there we go were

00:15:44,170 --> 00:15:50,530
connected to our database so that's

00:15:46,690 --> 00:15:53,290
super perfect okay now this file can get

00:15:50,530 --> 00:15:55,90
quite crazy as you can see it gets kind

00:15:53,290 --> 00:15:58,180
of crazy so what we can do is we can

00:15:55,90 --> 00:16:00,550
actually remove these routes from here

00:15:58,180 --> 00:16:03,40
and add them into their own kind of file

00:16:00,550 --> 00:16:05,350
and we can import them in here and use

00:16:03,40 --> 00:16:06,730
them so let's take a look on how we can

00:16:05,350 --> 00:16:09,720
do that we can create a folder here

00:16:06,730 --> 00:16:12,760
called route and maybe this is just

00:16:09,720 --> 00:16:16,450
handling posts so we can create a new

00:16:12,760 --> 00:16:20,890
file that's called posts like that dot J

00:16:16,450 --> 00:16:23,440
s okay and what we can do here is we can

00:16:20,890 --> 00:16:29,580
import that express again require

00:16:23,440 --> 00:16:33,130
Express and what we can also do is call

00:16:29,580 --> 00:16:37,150
const router set this equal to Express

00:16:33,130 --> 00:16:38,710
router and call this as a function and

00:16:37,150 --> 00:16:40,990
now what we can do is we can kind of

00:16:38,710 --> 00:16:43,750
create our own routes in separate files

00:16:40,990 --> 00:16:46,150
and just import it into this app dot J s

00:16:43,750 --> 00:16:48,460
and it's all gonna make sense in a bit

00:16:46,150 --> 00:16:51,310
so now we can use this router rather

00:16:48,460 --> 00:16:54,460
than the app to create our routes so we

00:16:51,310 --> 00:17:00,70
can do rather than get and we can do

00:16:54,460 --> 00:17:02,80
slash posts and we can just say request

00:17:00,70 --> 00:17:04,990
and response and we can actually just

00:17:02,80 --> 00:17:07,780
copy everything from here and paste it

00:17:04,990 --> 00:17:12,550
in here and change this to router and

00:17:07,780 --> 00:17:14,380
now we can just module dot exports set

00:17:12,550 --> 00:17:17,280
this equal to that router so we're

00:17:14,380 --> 00:17:19,540
exporting this router so you can kind of

00:17:17,280 --> 00:17:21,910
configure this so you can have a post

00:17:19,540 --> 00:17:24,939
router you can maybe have a user's

00:17:21,910 --> 00:17:26,860
router and things like that okay so you

00:17:24,939 --> 00:17:30,210
can you can make everything more clean

00:17:26,860 --> 00:17:33,400
and your folder structure and everything

00:17:30,210 --> 00:17:35,860
okay so we have this one hope you're

00:17:33,400 --> 00:17:40,240
still with me because I'm lost already

00:17:35,860 --> 00:17:43,420
I'm tired again ok so we have this now

00:17:40,240 --> 00:17:44,140
the cool thing is that maybe I don't

00:17:43,420 --> 00:17:47,710
want to keep

00:17:44,140 --> 00:17:50,710
of having like slash posts and things of

00:17:47,710 --> 00:17:53,790
that sort so we can use a middleware we

00:17:50,710 --> 00:17:56,770
can bring this posts from here to a BAS

00:17:53,790 --> 00:18:02,160
so import route

00:17:56,770 --> 00:18:05,800
I can just say Const posts routes route

00:18:02,160 --> 00:18:09,310
posts route is equal to require and I'll

00:18:05,800 --> 00:18:13,210
just go to that folder so posts there we

00:18:09,310 --> 00:18:16,810
go and now rather than the way we can do

00:18:13,210 --> 00:18:19,900
that do it is we can go here and we can

00:18:16,810 --> 00:18:21,730
just do AB dot use so we can create the

00:18:19,900 --> 00:18:24,280
middleware and now I'm gonna say every

00:18:21,730 --> 00:18:29,470
time you go to that posts make sure to

00:18:24,280 --> 00:18:31,120
use this post route ok and now here the

00:18:29,470 --> 00:18:33,70
cool thing is I don't have to add this

00:18:31,120 --> 00:18:35,890
posts anymore here because every time

00:18:33,70 --> 00:18:38,200
we're gonna go to posts these post

00:18:35,890 --> 00:18:41,590
routes are gonna run so let's take a

00:18:38,200 --> 00:18:44,80
look let's go back here to our localhost

00:18:41,590 --> 00:18:46,630
and hit enter and we should still see

00:18:44,80 --> 00:18:50,260
that we are on posts now the cool thing

00:18:46,630 --> 00:18:53,80
here is that if I want to add more I can

00:18:50,260 --> 00:18:57,460
just go here and just add maybe a

00:18:53,80 --> 00:19:00,820
specific post so maybe post dot specific

00:18:57,460 --> 00:19:06,640
and hit enter and this is gonna be a

00:19:00,820 --> 00:19:07,510
specific post hit save and now if we go

00:19:06,640 --> 00:19:11,560
back to the browser

00:19:07,510 --> 00:19:14,800
I can just go slash specific and that's

00:19:11,560 --> 00:19:17,710
not correct because I might misspell

00:19:14,800 --> 00:19:21,220
this let's go back again to the browser

00:19:17,710 --> 00:19:23,380
and there we go hit enter and as you can

00:19:21,220 --> 00:19:24,790
see we are on specific post so the

00:19:23,380 --> 00:19:28,80
reason we're doing this with the

00:19:24,790 --> 00:19:30,580
middleware here is you can have multiple

00:19:28,80 --> 00:19:34,30
middleware so you can use AB dot use

00:19:30,580 --> 00:19:36,100
maybe have a user slash user and you

00:19:34,30 --> 00:19:38,140
have a user route ok you can create a

00:19:36,100 --> 00:19:41,200
new file for that as well now I don't

00:19:38,140 --> 00:19:43,180
have to worry about adding here posts

00:19:41,200 --> 00:19:45,850
and everything slash whatever whatever I

00:19:43,180 --> 00:19:48,730
always know that in here and my post

00:19:45,850 --> 00:19:50,670
route this is always gonna bring me to

00:19:48,730 --> 00:19:53,140
that post so whatever you have in that

00:19:50,670 --> 00:19:56,110
fjs and if you want to attach more

00:19:53,140 --> 00:19:58,540
things to it and then you can do it here

00:19:56,110 --> 00:20:01,750
like we did here with the specific so

00:19:58,540 --> 00:20:03,910
this may be a bit weird but it's it's

00:20:01,750 --> 00:20:06,100
very effective and all you have to do

00:20:03,910 --> 00:20:08,890
again is just create a route export that

00:20:06,100 --> 00:20:11,860
router here and then just bring it into

00:20:08,890 --> 00:20:14,290
the app is and use it as a middleware

00:20:11,860 --> 00:20:17,380
and that's it that's all you have to do

00:20:14,290 --> 00:20:20,460
so we have AB dot use posts here which

00:20:17,380 --> 00:20:24,880
is great and now we can only work here

00:20:20,460 --> 00:20:27,730
ok that's perfect and let's see what we

00:20:24,880 --> 00:20:29,890
are gonna need so here I'm gonna leave

00:20:27,730 --> 00:20:33,309
this we are on home that's completely

00:20:29,890 --> 00:20:37,299
fine and now what we're gonna need to do

00:20:33,309 --> 00:20:39,40
is we are going to need to create some

00:20:37,299 --> 00:20:41,650
data so we can store it in our database

00:20:39,40 --> 00:20:45,190
because we have nothing now and the way

00:20:41,650 --> 00:20:47,860
we do that is with Mongoose is we create

00:20:45,190 --> 00:20:49,600
these models so let me just show you

00:20:47,860 --> 00:20:51,250
because it's gonna make a lot of sense

00:20:49,600 --> 00:20:54,70
once I show you so we're gonna create a

00:20:51,250 --> 00:20:57,549
new folder called model here our models

00:20:54,70 --> 00:21:00,190
hit enter and then you just create a

00:20:57,549 --> 00:21:04,299
post model so I'm gonna uppercase this

00:21:00,190 --> 00:21:06,640
spacing post dot J s hit enter ok and

00:21:04,299 --> 00:21:11,730
here I'm gonna import that Mongoose

00:21:06,640 --> 00:21:16,0
package require Mongoose Thanks so

00:21:11,730 --> 00:21:18,190
perfect and we are gonna create a schema

00:21:16,0 --> 00:21:21,850
now now what the schema means it just

00:21:18,190 --> 00:21:24,970
represents how that post looks so maybe

00:21:21,850 --> 00:21:26,950
it has a a title and that's a string

00:21:24,970 --> 00:21:28,870
maybe it has some description so you

00:21:26,950 --> 00:21:31,90
kind of describe the way your data looks

00:21:28,870 --> 00:21:33,700
that's that that's it that's what a

00:21:31,90 --> 00:21:36,790
schema is so let's create it we can be

00:21:33,700 --> 00:21:40,360
const post schema and we can set this

00:21:36,790 --> 00:21:42,610
equal to Mongoose dot schema okay we're

00:21:40,360 --> 00:21:45,850
getting that functionality from Mongoose

00:21:42,610 --> 00:21:48,40
and here we just create an object like

00:21:45,850 --> 00:21:49,900
so and now we can just describe the

00:21:48,40 --> 00:21:54,970
properties that we want to use so maybe

00:21:49,900 --> 00:21:57,280
my post has a title okay and that's a

00:21:54,970 --> 00:22:00,400
string that's it that's all you have to

00:21:57,280 --> 00:22:03,460
do maybe I have a description I can add

00:22:00,400 --> 00:22:07,480
a description and that's gonna be a

00:22:03,460 --> 00:22:09,830
string and maybe I have a price I don't

00:22:07,480 --> 00:22:13,669
know why you would have a price

00:22:09,830 --> 00:22:16,70
so I just get rid of this and we can

00:22:13,669 --> 00:22:18,110
also do date if we want okay maybe these

00:22:16,70 --> 00:22:24,9
are the only three properties we want

00:22:18,110 --> 00:22:27,710
and we can just do date thought now okay

00:22:24,9 --> 00:22:30,200
now what if I want to add validation to

00:22:27,710 --> 00:22:33,529
this or maybe I need this to be required

00:22:30,200 --> 00:22:35,690
okay this cannot be left empty that way

00:22:33,529 --> 00:22:38,720
we can do this we can remove this string

00:22:35,690 --> 00:22:41,570
and we can just add an object here and

00:22:38,720 --> 00:22:44,29
now we can describe multiple things so I

00:22:41,570 --> 00:22:46,220
can add a type of string so the way we

00:22:44,29 --> 00:22:48,889
did it but maybe I want this to be

00:22:46,220 --> 00:22:51,200
required so I can add required true and

00:22:48,889 --> 00:22:51,980
I can actually copy and paste this to

00:22:51,200 --> 00:22:54,109
the next one

00:22:51,980 --> 00:22:57,950
so in here because this is gonna be the

00:22:54,109 --> 00:23:05,929
same and for the date I can also add a

00:22:57,950 --> 00:23:08,269
type date there we go and we can also

00:23:05,929 --> 00:23:11,179
add a default if we want we can save a

00:23:08,269 --> 00:23:13,429
thought now and hit save so there we go

00:23:11,179 --> 00:23:16,249
again this just kind of describes the

00:23:13,429 --> 00:23:18,379
way our data is gonna look our post data

00:23:16,249 --> 00:23:20,799
you can imagine that we have a user

00:23:18,379 --> 00:23:24,950
schema that's all it's gonna be is like

00:23:20,799 --> 00:23:27,289
Mongoose dot schema and then you can

00:23:24,950 --> 00:23:29,330
define the user schema maybe you have a

00:23:27,289 --> 00:23:34,820
user name that's gonna be a type string

00:23:29,330 --> 00:23:38,389
a password and a string okay and you can

00:23:34,820 --> 00:23:39,799
have date or maybe user info so it just

00:23:38,389 --> 00:23:42,739
kind of describes the way your data

00:23:39,799 --> 00:23:45,289
looks that's all it is and at the end

00:23:42,739 --> 00:23:47,809
once we have the schema all we do is we

00:23:45,289 --> 00:23:51,489
module that exports we export this and

00:23:47,809 --> 00:23:54,350
we set this equal to Mangusta model and

00:23:51,489 --> 00:23:57,19
now we give it a name so I'm gonna give

00:23:54,350 --> 00:23:59,779
it post and this model is the thing

00:23:57,19 --> 00:24:02,690
that's gonna show up in our EM lab so

00:23:59,779 --> 00:24:05,480
you're gonna see posts show up okay so

00:24:02,690 --> 00:24:07,580
we give this the name and the schema

00:24:05,480 --> 00:24:09,350
that it should use so we're gonna say

00:24:07,580 --> 00:24:12,259
post kheema and that's it I promise

00:24:09,350 --> 00:24:14,359
that's it there we go so we create that

00:24:12,259 --> 00:24:17,450
model we give it a name and we give a

00:24:14,359 --> 00:24:19,279
disk image to use and that's it that's

00:24:17,450 --> 00:24:21,859
all we need to do we can close out of

00:24:19,279 --> 00:24:23,779
this and we can just straight up work

00:24:21,859 --> 00:24:28,49
and this posts

00:24:23,779 --> 00:24:30,690
so let's let's try the get back let's

00:24:28,49 --> 00:24:33,59
try to add a post okay let's try to

00:24:30,690 --> 00:24:37,919
create one so the first thing you would

00:24:33,59 --> 00:24:40,289
do is you would import you would go up

00:24:37,919 --> 00:24:41,759
here and you would import then model

00:24:40,289 --> 00:24:45,480
that you want to post to so we're gonna

00:24:41,759 --> 00:24:47,580
say Const post equals require then we

00:24:45,480 --> 00:24:51,899
can go back to the model we need to add

00:24:47,580 --> 00:24:55,80
double dots here dot dot slash we need

00:24:51,899 --> 00:24:58,289
to go to models slash post there we go

00:24:55,80 --> 00:25:05,840
it's safe so we go back this post and

00:24:58,289 --> NaN:NaN:NaN,NaN
now what we can do is let's go down here

00:25:06,109 --> 00:25:11,39
there we go and we can just say router

00:25:08,909 --> 00:25:13,950
dot post because we want to post

00:25:11,39 --> 00:25:17,789
something to it and the route is gonna

00:25:13,950 --> 00:25:19,830
be slash and then we can add a comma

00:25:17,789 --> 00:25:24,299
then we're gonna have request and

00:25:19,830 --> 00:25:26,519
response thanks umm perfect here we go

00:25:24,299 --> 00:25:29,970
we're gonna open this up and the way we

00:25:26,519 --> 00:25:32,9
can create a new post is by saying cons

00:25:29,970 --> 00:25:35,970
post okay I'm just going to create an

00:25:32,9 --> 00:25:38,489
object here and what we need to do is we

00:25:35,970 --> 00:25:41,249
are gonna have to access the information

00:25:38,489 --> 00:25:44,369
so the thing that we're posting to our

00:25:41,249 --> 00:25:46,769
API from the body so request dot body

00:25:44,369 --> 00:25:48,889
and we can actually console.log that out

00:25:46,769 --> 00:25:51,629
to see what we get back so console.log

00:25:48,889 --> 00:25:53,659
request dot body and I'm just no I'm

00:25:51,629 --> 00:25:55,889
just gonna leave it at this for now

00:25:53,659 --> 00:25:58,379
because we are gonna need another

00:25:55,889 --> 00:26:00,419
package to make this work so how can we

00:25:58,379 --> 00:26:02,249
test this out so how can we post things

00:26:00,419 --> 00:26:05,730
delete things without actually creating

00:26:02,249 --> 00:26:08,879
a react app or without using the browser

00:26:05,730 --> 00:26:10,769
so it very cool thing that we have is

00:26:08,879 --> 00:26:14,39
something called postman so you can

00:26:10,769 --> 00:26:16,49
search up postman and this is the first

00:26:14,39 --> 00:26:19,139
one right here and you can download it

00:26:16,49 --> 00:26:21,659
it's super simple and this is again just

00:26:19,139 --> 00:26:25,249
gonna help us test out our API in very

00:26:21,659 --> 00:26:27,570
simple ways so let me open this up here

00:26:25,249 --> 00:26:33,840
let me close this we're gonna say

00:26:27,570 --> 00:26:35,999
postman come on my friend this laptop is

00:26:33,840 --> 00:26:37,560
killing me alright there we go so we're

00:26:35,999 --> 00:26:40,890
opening a postman here

00:26:37,560 --> 00:26:43,560
and it's taking too much it's too long

00:26:40,890 --> 00:26:45,870
there we go I'm I need to reinstall mine

00:26:43,560 --> 00:26:48,180
because it's giving me an s nasty error

00:26:45,870 --> 00:26:50,340
but anyway we can close this up even

00:26:48,180 --> 00:26:53,550
this one we can close this up and as you

00:26:50,340 --> 00:26:56,130
can see here now we can make a get

00:26:53,550 --> 00:26:58,290
request if we want so let's try to make

00:26:56,130 --> 00:27:00,960
a get request to this post all I have to

00:26:58,290 --> 00:27:02,910
do is copy this and paste it in here and

00:27:00,960 --> 00:27:05,160
I want to do get requests and when I hit

00:27:02,910 --> 00:27:08,970
Send as you can see I get back that

00:27:05,160 --> 00:27:12,270
message we are on posts perfect now how

00:27:08,970 --> 00:27:13,80
can I submit one we can just go to post

00:27:12,270 --> 00:27:16,260
here

00:27:13,80 --> 00:27:18,900
and now I want to make sure I go to body

00:27:16,260 --> 00:27:20,940
here let me delete this and you can

00:27:18,900 --> 00:27:23,840
choose if you have it on form data you

00:27:20,940 --> 00:27:26,880
can choose raw and you can go to JSON

00:27:23,840 --> 00:27:29,550
application JavaScript here not

00:27:26,880 --> 00:27:31,290
application JSON application JSON here

00:27:29,550 --> 00:27:32,850
and now you can submit data you can

00:27:31,290 --> 00:27:38,520
imagine that your kind of doing this

00:27:32,850 --> 00:27:40,530
with on a react okay front-end but we

00:27:38,520 --> 00:27:42,660
can just do it here so the way we can

00:27:40,530 --> 00:27:45,300
submit to it is we can create an object

00:27:42,660 --> 00:27:50,910
here like so let me can zoom in here so

00:27:45,300 --> 00:27:53,460
you can see there we go actually more

00:27:50,910 --> 00:27:56,880
and now we can just define the things

00:27:53,460 --> 00:27:59,490
that we defined and our model so how is

00:27:56,880 --> 00:28:01,950
our post model looking like well let's

00:27:59,490 --> 00:28:06,290
take a look so let me open up the code

00:28:01,950 --> 00:28:08,610
here and it takes a title a description

00:28:06,290 --> 00:28:10,560
we don't need to provide the date

00:28:08,610 --> 00:28:13,530
because it's gonna jump to this default

00:28:10,560 --> 00:28:16,890
now so all we need to do is just add a

00:28:13,530 --> 00:28:20,510
title and description so let's try it so

00:28:16,890 --> 00:28:22,710
we can do a title and I'm just gonna say

00:28:20,510 --> 00:28:27,900
make sure to add double quotes here

00:28:22,710 --> 00:28:31,140
title and we're gonna say my first post

00:28:27,900 --> 00:28:32,970
and then we can also add a description

00:28:31,140 --> 00:28:36,450
again make sure you add those double

00:28:32,970 --> 00:28:42,390
quotes and a comma at the end here this

00:28:36,450 --> 00:28:44,580
is my description of my love life why

00:28:42,390 --> 00:28:48,660
would you do that I'm not sure but hey

00:28:44,580 --> 00:28:50,780
Yolo okay so we have this going here I'm

00:28:48,660 --> 00:28:53,900
gonna fullscreen this

00:28:50,780 --> 00:28:55,610
and now when we click send as you can

00:28:53,900 --> 00:28:58,760
see this is loading nothing really

00:28:55,610 --> 00:29:02,900
happens here which is fine but if we go

00:28:58,760 --> 00:29:05,900
back to our our app here we're gonna see

00:29:02,900 --> 00:29:09,320
that we get undefined down here hmm why

00:29:05,900 --> 00:29:16,130
is that happening well the problem is

00:29:09,320 --> 00:29:18,350
that we cannot process that that request

00:29:16,130 --> 00:29:20,900
that's coming in in our body we're gonna

00:29:18,350 --> 00:29:25,520
need a special package that's going to

00:29:20,900 --> 00:29:28,130
convert this to JSON for us okay so this

00:29:25,520 --> 00:29:29,720
is not gonna work by default so the way

00:29:28,130 --> 00:29:31,790
we can do that is there's a package

00:29:29,720 --> 00:29:34,430
called body parser which is gonna do

00:29:31,790 --> 00:29:38,480
exactly that it's gonna parse our our

00:29:34,430 --> 00:29:41,390
request and it's gonna give us back the

00:29:38,480 --> 00:29:45,260
correct way to handle that data so we

00:29:41,390 --> 00:29:49,100
can just npm install body parser like so

00:29:45,260 --> 00:29:51,170
okay hits enter it's about waiting again

00:29:49,100 --> 00:29:53,390
so there's a lot of waiting with

00:29:51,170 --> 00:29:55,550
installing these packages so all you

00:29:53,390 --> 00:29:58,970
have to do is up here let's go back to

00:29:55,550 --> 00:30:02,630
our App KS and we just add that package

00:29:58,970 --> 00:30:06,650
so we say Const body parser is equal to

00:30:02,630 --> 00:30:09,380
require body parts are like so and now

00:30:06,650 --> 00:30:12,410
we just create one of those middlewares

00:30:09,380 --> 00:30:16,850
we can say have got use and every time

00:30:12,410 --> 00:30:20,930
we hit any request we're gonna make sure

00:30:16,850 --> 00:30:24,620
that this body parser runs okay so we're

00:30:20,930 --> 00:30:26,900
gonna say body parser dot JSON like so

00:30:24,620 --> 00:30:28,640
and that's it that's all we have to do

00:30:26,900 --> 00:30:31,640
is one line of code

00:30:28,640 --> 00:30:33,590
literally so npm start and let's take a

00:30:31,640 --> 00:30:36,260
look again if that works so we're gonna

00:30:33,590 --> 00:30:39,710
start up the server let's go back to

00:30:36,260 --> 00:30:41,510
postman and hit send again on the posts

00:30:39,710 --> 00:30:43,490
and let's take a look what we get now

00:30:41,510 --> 00:30:46,70
look at that we are getting back the

00:30:43,490 --> 00:30:47,780
title and description down there so

00:30:46,70 --> 00:30:51,470
again it parses it and then make sure

00:30:47,780 --> 00:30:53,750
the response comes back and we can work

00:30:51,470 --> 00:30:55,520
with it that's all body parts or does so

00:30:53,750 --> 00:30:57,920
now that we have this information we can

00:30:55,520 --> 00:31:02,540
kind of work with it and post it to our

00:30:57,920 --> 00:31:04,250
database so that's very cool so let's

00:31:02,540 --> 00:31:07,910
take a look here

00:31:04,250 --> 00:31:10,10
let's go back to our posts we can close

00:31:07,910 --> 00:31:12,950
this up our Apogee yes we're not gonna

00:31:10,10 --> 00:31:16,10
work in aperture does yes anymore let's

00:31:12,950 --> 00:31:20,0
minimize that as well and in here in our

00:31:16,10 --> 00:31:22,280
posts what we can do is delete this we

00:31:20,0 --> 00:31:23,840
don't need this so just so you know we

00:31:22,280 --> 00:31:27,380
have our information that we're sending

00:31:23,840 --> 00:31:29,720
on this request dot body okay let's get

00:31:27,380 --> 00:31:31,640
rid of this and we can create a new post

00:31:29,720 --> 00:31:34,970
I'm just gonna say Const

00:31:31,640 --> 00:31:37,790
equals to new post now what is this new

00:31:34,970 --> 00:31:40,130
post well it's from here we are gonna

00:31:37,790 --> 00:31:44,30
create a new post with this model that

00:31:40,130 --> 00:31:47,60
we have up here and all we have to do is

00:31:44,30 --> 00:31:51,320
call this function and pass in an object

00:31:47,60 --> 00:31:54,200
in here okay and here we have a title

00:31:51,320 --> 00:31:57,980
and where is that title coming from from

00:31:54,200 --> 00:32:00,410
request body title we also have a

00:31:57,980 --> 00:32:04,280
description that's coming again from

00:32:00,410 --> 00:32:07,10
request body description okay hope

00:32:04,280 --> 00:32:10,190
that's super clear okay so we have this

00:32:07,10 --> 00:32:14,90
post now and we can save this to our

00:32:10,190 --> 00:32:17,570
database by just saying post dot save

00:32:14,90 --> 00:32:21,890
like so perfect and this actually

00:32:17,570 --> 00:32:24,20
returns a promise and actually we need

00:32:21,890 --> 00:32:27,230
to add something called exact which

00:32:24,20 --> 00:32:31,40
makes it to return a promise and then

00:32:27,230 --> 00:32:34,160
all we have to do is say then okay so

00:32:31,40 --> 00:32:37,970
we're just doing a promise here we can

00:32:34,160 --> 00:32:39,890
get back the data like so and then all

00:32:37,970 --> 00:32:43,10
we have to do is say restaurant JSON

00:32:39,890 --> 00:32:45,80
data so if I want to see it on the

00:32:43,10 --> 00:32:47,660
screen this is all gonna do after we

00:32:45,80 --> 00:32:49,340
posted data I'm just gonna put it out on

00:32:47,660 --> 00:32:52,370
the screen there so I'm just gonna

00:32:49,340 --> 00:32:55,370
respond with a JSON and the data that

00:32:52,370 --> 00:32:59,30
we're saving to our database and here we

00:32:55,370 --> 00:33:01,520
can also catch if we have an error so

00:32:59,30 --> 00:33:05,330
make sure to add dot catch here error

00:33:01,520 --> 00:33:08,90
and here we can just run an arrow

00:33:05,330 --> 00:33:10,70
function again and you can also respond

00:33:08,90 --> 00:33:15,310
with a status code so here this would be

00:33:10,70 --> 00:33:17,580
a 200 so you could do res dot status

00:33:15,310 --> 00:33:20,10
like 200 but I

00:33:17,580 --> 00:33:22,830
want to overcomplicate with you you can

00:33:20,10 --> 00:33:24,240
take a look at the status codes if you

00:33:22,830 --> 00:33:26,460
want to know more you're proud you

00:33:24,240 --> 00:33:28,920
probably know 404 which means that it's

00:33:26,460 --> 00:33:30,590
not found so that's kind of when you

00:33:28,920 --> 00:33:33,570
will see what you would use these

00:33:30,590 --> 00:33:37,230
statuses for so we for this one we can

00:33:33,570 --> 00:33:39,900
just say rest JSON and we can just send

00:33:37,230 --> 00:33:41,790
back that error message we can even do

00:33:39,900 --> 00:33:45,360
one if we want we can create a object

00:33:41,790 --> 00:33:49,110
here with a message of error hit save

00:33:45,360 --> 00:33:52,710
and yeah let's take a look if this works

00:33:49,110 --> 00:33:56,490
let's go here and now we add this and we

00:33:52,710 --> 00:33:59,760
hit send and we get an error is gonna

00:33:56,490 --> 00:34:02,130
say post out saved is not a function so

00:33:59,760 --> 00:34:04,590
let's take a look why this is happening

00:34:02,130 --> 00:34:07,620
and I apologize I don't think we

00:34:04,590 --> 00:34:11,370
actually need need this exec anymore

00:34:07,620 --> 00:34:15,570
we can just hit save here let's take a

00:34:11,370 --> 00:34:18,510
look now and hit send again and there we

00:34:15,570 --> 00:34:21,270
go look we have that object created and

00:34:18,510 --> 00:34:26,640
we can even take a look in our database

00:34:21,270 --> 00:34:30,630
so let's go back to M lab in here there

00:34:26,640 --> 00:34:35,310
we go let's hit refresh and we have our

00:34:30,630 --> 00:34:37,200
rest yes there we go and we have posts

00:34:35,310 --> 00:34:39,30
and there we go that's our model our

00:34:37,200 --> 00:34:41,280
post model and we have two posts

00:34:39,30 --> 00:34:43,920
actually I think I submitted this twice

00:34:41,280 --> 00:34:45,570
so my first post and my first post so

00:34:43,920 --> 00:34:48,690
let's get rid of one we can also get rid

00:34:45,570 --> 00:34:51,60
of one by clicking on delete and as you

00:34:48,690 --> 00:34:54,200
can see it also gives us an ID so this

00:34:51,60 --> 00:34:58,140
is something automatically generated by

00:34:54,200 --> 00:35:01,740
by Mongo and we have title description

00:34:58,140 --> 00:35:04,380
and our date right down here so that's

00:35:01,740 --> 00:35:07,290
super super cool and we can also

00:35:04,380 --> 00:35:09,270
reformat this and async await if you

00:35:07,290 --> 00:35:11,520
want and the way you can do that is all

00:35:09,270 --> 00:35:14,370
you have to do is just add async up here

00:35:11,520 --> 00:35:17,820
so before this request and response this

00:35:14,370 --> 00:35:23,70
stays the same and here we just create a

00:35:17,820 --> 00:35:26,670
cost and let's say saved post and we can

00:35:23,70 --> 00:35:28,530
set this equal to a weight post dot save

00:35:26,670 --> 00:35:30,340
and that's it and we can kind of

00:35:28,530 --> 00:35:34,30
simplify this

00:35:30,340 --> 00:35:38,530
get rid of this and then we have we can

00:35:34,30 --> 00:35:40,360
just rest dot JSON these saved post so

00:35:38,530 --> 00:35:43,720
this is a bit more cleaner now we can

00:35:40,360 --> 00:35:46,540
wrap this in a try-catch like so so we

00:35:43,720 --> 00:35:48,910
can try this and then we can catch an

00:35:46,540 --> 00:35:52,450
error just in case

00:35:48,910 --> 00:35:56,290
so catch and here we have access to an

00:35:52,450 --> 00:36:00,790
error like so and we can just rest are

00:35:56,290 --> 00:36:02,290
JSON a message with the error hit save

00:36:00,790 --> 00:36:04,930
and let's see if that works the same way

00:36:02,290 --> 00:36:09,610
we can go back to postman and here let's

00:36:04,930 --> 00:36:13,420
say this is my second post and here we

00:36:09,610 --> 00:36:18,700
can just change the description to my

00:36:13,420 --> 00:36:21,520
love life this is kind of not great okay

00:36:18,700 --> 00:36:23,590
and hit save here and we can send this

00:36:21,520 --> 00:36:26,650
again and as you can see it works the

00:36:23,590 --> 00:36:28,810
same way and we should have that data

00:36:26,650 --> 00:36:31,360
available for us now let's actually

00:36:28,810 --> 00:36:33,640
change up this router get here so we get

00:36:31,360 --> 00:36:37,300
back all the posts because right now we

00:36:33,640 --> 00:36:38,830
are not getting back all the posts and I

00:36:37,300 --> 00:36:42,40
don't want this message we are on posts

00:36:38,830 --> 00:36:43,750
who cares we won't back the data so the

00:36:42,40 --> 00:36:46,60
way we can get that is again we can just

00:36:43,750 --> 00:36:50,260
add that async if we want and we can do

00:36:46,60 --> 00:36:52,690
a try-catch here like so catch we can

00:36:50,260 --> 00:36:56,490
catch the error and here I can just

00:36:52,690 --> 00:37:00,40
press that JSON the message of error

00:36:56,490 --> 00:37:02,650
perfect and in our try what we can do is

00:37:00,40 --> 00:37:04,210
we can just say cost posts so this is

00:37:02,650 --> 00:37:08,200
all the posts that we're getting back

00:37:04,210 --> 00:37:11,640
and we can await the response so we can

00:37:08,200 --> 00:37:14,200
call post so again this is the model and

00:37:11,640 --> 00:37:17,320
the way we can get back is by adding

00:37:14,200 --> 00:37:20,740
find okay this is a method on Mongoose

00:37:17,320 --> 00:37:22,720
and here again if you leave it empty

00:37:20,740 --> 00:37:25,390
like this this is just gonna return all

00:37:22,720 --> 00:37:27,490
the posts for you there's a lot of

00:37:25,390 --> 00:37:29,230
things you can do look if you want you

00:37:27,490 --> 00:37:31,390
can have a limit so you can return only

00:37:29,230 --> 00:37:33,340
five posts if you want that is what you

00:37:31,390 --> 00:37:35,500
wish for so you have a lot of options

00:37:33,340 --> 00:37:37,540
options here but for now we're just

00:37:35,500 --> 00:37:40,240
gonna return everything and that's gonna

00:37:37,540 --> 00:37:42,810
be fine we can say rest out JSON and we

00:37:40,240 --> 00:37:45,599
can send back that response so

00:37:42,810 --> 00:37:48,690
and that's it let's take a look we are

00:37:45,599 --> 00:37:51,300
on post we can go to get and when we hit

00:37:48,690 --> 00:37:54,420
Send look we are getting back the whole

00:37:51,300 --> 00:37:58,79
lists of all of our posts let's do

00:37:54,420 --> 00:38:00,810
another post request here and on the

00:37:58,79 --> 00:38:03,20
posts we can go back to the body let's

00:38:00,810 --> 00:38:08,70
and eat another one just so we have tree

00:38:03,20 --> 00:38:12,480
this is my final post my final YouTube

00:38:08,70 --> 00:38:15,810
video parenthesis emotional okay

00:38:12,480 --> 00:38:19,369
click baiting perfect and the

00:38:15,810 --> 00:38:23,490
description is gonna be buy my merch

00:38:19,369 --> 00:38:25,619
alright and hit Send and we should get

00:38:23,490 --> 00:38:27,839
another one so we can go back again to

00:38:25,619 --> 00:38:31,950
the get its sent and now we have pre

00:38:27,839 --> 00:38:34,770
posts here so that's very very cool okay

00:38:31,950 --> 00:38:39,770
what else do we need to do well let's

00:38:34,770 --> 00:38:48,990
try to get a specific post so this one

00:38:39,770 --> 00:38:57,60
gets back all the posts this one submits

00:38:48,990 --> 00:39:00,89
a post and down here we can let's get

00:38:57,60 --> 00:39:04,770
back a son which I will let's get back a

00:39:00,89 --> 00:39:07,109
specific post specific post okay the way

00:39:04,770 --> 00:39:07,619
we can do that is we can do browser yet

00:39:07,109 --> 00:39:09,540
again

00:39:07,619 --> 00:39:11,670
okay get because we want to get back one

00:39:09,540 --> 00:39:14,930
specific post and rather than adding

00:39:11,670 --> 00:39:18,660
only slash we can do slash and we can do

00:39:14,930 --> 00:39:23,210
call on here and we can give it a name

00:39:18,660 --> 00:39:26,660
so like post ID or something post ID and

00:39:23,210 --> 00:39:30,540
here we have our request and response

00:39:26,660 --> 00:39:32,640
and let me cancel log out this post I be

00:39:30,540 --> 00:39:39,30
so you know what it is I can just say

00:39:32,640 --> 00:39:41,609
console.log request dot params got post

00:39:39,30 --> 00:39:43,890
IB so this is where we have it we have

00:39:41,609 --> 00:39:46,829
access to it okay

00:39:43,890 --> 00:39:49,290
let's save and basically this is kind of

00:39:46,829 --> 00:39:51,900
like a dynamic parameter so anything you

00:39:49,290 --> 00:39:54,760
add after posts so let's take a look

00:39:51,900 --> 00:39:57,790
here anything you add after here the

00:39:54,760 --> 00:40:01,240
is gonna be that post ID and we can

00:39:57,790 --> 00:40:03,160
access it with request params post ID so

00:40:01,240 --> 00:40:06,100
let me just show you the example because

00:40:03,160 --> 00:40:08,770
we are council logging it here and this

00:40:06,100 --> 00:40:12,130
route so if we go back here what we can

00:40:08,770 --> 00:40:14,830
do is just say this is the per am and

00:40:12,130 --> 00:40:16,420
when we hit send all right this is gonna

00:40:14,830 --> 00:40:18,430
block but that's fine because we're just

00:40:16,420 --> 00:40:20,800
console logging but as you can see here

00:40:18,430 --> 00:40:23,950
on our console well this is our per am

00:40:20,800 --> 00:40:26,620
so okay that's cool but what can we do

00:40:23,950 --> 00:40:31,450
with this well we can find a specific

00:40:26,620 --> 00:40:35,230
post by the URL so what we can do we can

00:40:31,450 --> 00:40:37,90
delete this and we can say post okay be

00:40:35,230 --> 00:40:40,960
model again so whenever you want to do

00:40:37,90 --> 00:40:43,450
anything to to submit data or get data

00:40:40,960 --> 00:40:46,690
we can use them model that we created in

00:40:43,450 --> 00:40:48,670
here and what we can do is say post and

00:40:46,690 --> 00:40:51,100
again you have a ton of methods here

00:40:48,670 --> 00:40:53,830
that you can have fun with one of them

00:40:51,100 --> 00:40:56,20
is called find buy ID which we're going

00:40:53,830 --> 00:41:00,390
to use here and we are gonna find that

00:40:56,20 --> 00:41:06,10
ID by this parameter here request params

00:41:00,390 --> 00:41:07,960
da post ID okay that's it and then you

00:41:06,10 --> 00:41:10,900
can do something with the response so

00:41:07,960 --> 00:41:13,810
again we can use that async here and

00:41:10,900 --> 00:41:16,90
just store this into a single post said

00:41:13,810 --> 00:41:18,430
this equals that and make sure you add a

00:41:16,90 --> 00:41:20,790
weight because this might take some time

00:41:18,430 --> 00:41:23,800
because it's coming from a database and

00:41:20,790 --> 00:41:27,910
then what we can do is we can just say

00:41:23,800 --> 00:41:31,600
res dot send or JSON and we can send

00:41:27,910 --> 00:41:36,250
that post perfect again we can wrap it

00:41:31,600 --> 00:41:39,100
in a try-catch just to be safe here like

00:41:36,250 --> 00:41:42,850
so and we can catch just make sure if we

00:41:39,100 --> 00:41:45,970
have an error then we are gonna read

00:41:42,850 --> 00:41:49,780
that JSON that message with the error

00:41:45,970 --> 00:41:51,400
it's safe and let's take a look so when

00:41:49,780 --> 00:41:53,290
we are getting all the posts now if I

00:41:51,400 --> 00:41:56,560
had sent here we're getting back an

00:41:53,290 --> 00:41:59,410
error because there's no such thing with

00:41:56,560 --> 00:42:02,160
this ID as this is the per am but look

00:41:59,410 --> 00:42:04,330
at this if we go to posts and hit send

00:42:02,160 --> 00:42:06,580
while we are getting back all the

00:42:04,330 --> 00:42:07,990
information and let's let me just copy

00:42:06,580 --> 00:42:09,910
one of these IDs here

00:42:07,990 --> 00:42:11,950
oh my let's do this one the last one

00:42:09,910 --> 00:42:14,410
this this is my final YouTube video

00:42:11,950 --> 00:42:16,180
emotional and if I copied the ID from

00:42:14,410 --> 00:42:18,700
here and I paste it at the end of this

00:42:16,180 --> 00:42:22,150
URL and hit Send as you can see now it

00:42:18,700 --> 00:42:25,630
just returns that specific URL on that

00:42:22,150 --> 00:42:28,900
specific post just because just because

00:42:25,630 --> 00:42:31,540
of this of this post ID and we can pass

00:42:28,900 --> 00:42:34,540
it down and here to search for a

00:42:31,540 --> 00:42:37,720
specific post and this way you can

00:42:34,540 --> 00:42:39,910
delete a post or update the post using

00:42:37,720 --> 00:42:41,830
this pram so let's take a look on how we

00:42:39,910 --> 00:42:43,450
can delete one it's gonna be very simple

00:42:41,830 --> 00:42:47,680
we're gonna go down here we're gonna say

00:42:43,450 --> 00:42:50,770
delete a specific post down here all we

00:42:47,680 --> 00:42:53,380
have to do is a router dot delete so

00:42:50,770 --> 00:42:56,820
this is gonna be a delete method here we

00:42:53,380 --> 00:42:59,770
can do the same thing we can add post ID

00:42:56,820 --> 00:43:02,110
we can do request and response might

00:42:59,770 --> 00:43:06,310
wrote is super dry but that's fine

00:43:02,110 --> 00:43:08,440
and here now what we can do is again we

00:43:06,310 --> 00:43:11,110
can use that model to do something with

00:43:08,440 --> 00:43:13,300
our data so I'm gonna call post and we

00:43:11,110 --> 00:43:15,460
have a method here called remove and

00:43:13,300 --> 00:43:19,119
that's exactly what it's gonna do it's

00:43:15,460 --> 00:43:21,790
gonna remove a specific post so this

00:43:19,119 --> 00:43:24,220
takes an object here and we can remove

00:43:21,790 --> 00:43:26,350
something with a specific ID so I'm

00:43:24,220 --> 00:43:28,60
adding underscore here if you cannot see

00:43:26,350 --> 00:43:32,350
that let me zoom in that's too much

00:43:28,60 --> 00:43:34,480
ahead what are you doing I'm adding this

00:43:32,350 --> 00:43:37,480
underscore here because as you can see

00:43:34,480 --> 00:43:40,300
that's the thing that Mongo generates

00:43:37,480 --> 00:43:44,410
for us automatically so I'm searching

00:43:40,300 --> 00:43:48,760
basically by that criteria zoom out a

00:43:44,410 --> 00:43:53,830
bit n that's fine okay so here what I do

00:43:48,760 --> 00:43:55,570
is just say this IB needs to match that

00:43:53,830 --> 00:44:03,460
thing that's coming from my request

00:43:55,570 --> 00:44:07,650
params post ID okay so this one perfect

00:44:03,460 --> 00:44:11,740
let's hit save and again this is gonna

00:44:07,650 --> 00:44:15,400
come back with a promise so let's say he

00:44:11,740 --> 00:44:18,790
sync and I'm gonna store this construe

00:44:15,400 --> 00:44:21,850
moved post or something and said this

00:44:18,790 --> 00:44:26,900
equals that make sure we await this

00:44:21,850 --> 00:44:28,460
and we are they try catch again you can

00:44:26,900 --> 00:44:31,340
kind of actually copy/paste this and

00:44:28,460 --> 00:44:33,650
just modify that if this is taking too

00:44:31,340 --> 00:44:35,480
long we get back the error here and I

00:44:33,650 --> 00:44:37,820
can just copy-paste this from up here

00:44:35,480 --> 00:44:41,570
it's safe so once we have that removed

00:44:37,820 --> 00:44:46,880
post I can just send back let's just do

00:44:41,570 --> 00:44:50,810
a rest JSON with the removed post okay

00:44:46,880 --> 00:44:54,560
it's safe now the cool thing is all I

00:44:50,810 --> 00:44:56,330
have to do is once I am on this post so

00:44:54,560 --> 00:44:57,920
maybe I want to delete this and I want

00:44:56,330 --> 00:45:00,590
to keep continuing to make awesome

00:44:57,920 --> 00:45:03,920
videos on YouTube and we can just go to

00:45:00,590 --> 00:45:07,430
delete and now since I have the same ID

00:45:03,920 --> 00:45:08,570
here I can just hit Send and look at

00:45:07,430 --> 00:45:10,850
that we're getting back this weird

00:45:08,570 --> 00:45:13,370
message it's gonna say here delete count

00:45:10,850 --> 00:45:16,100
let's let's make sure that we deleted

00:45:13,370 --> 00:45:18,740
this post so we can go back to the get

00:45:16,100 --> 00:45:21,710
request here and we can just delete this

00:45:18,740 --> 00:45:23,330
IP and just call it this posts so we can

00:45:21,710 --> 00:45:26,620
get back all the posts and look at that

00:45:23,330 --> 00:45:29,630
we deleted the last one so that's good

00:45:26,620 --> 00:45:33,650
now the final thing I want to show you

00:45:29,630 --> 00:45:36,80
is how we can update one so let's go

00:45:33,650 --> 00:45:39,470
back here and the way we can update one

00:45:36,80 --> 00:45:43,310
is by using something called patch so

00:45:39,470 --> 00:45:46,190
update a post and let's say I want to

00:45:43,310 --> 00:45:48,20
update a title of a specific post so all

00:45:46,190 --> 00:45:50,630
we have to do is call router dot patch

00:45:48,20 --> 00:45:53,240
that's gonna update it I can do the same

00:45:50,630 --> 00:45:56,960
thing so everything kind of repeats

00:45:53,240 --> 00:46:00,610
itself here and we can call a method

00:45:56,960 --> 00:46:03,620
called on the post again update one and

00:46:00,610 --> 00:46:06,170
I can pass that thing and that we did

00:46:03,620 --> 00:46:09,230
here so the criteria that we are

00:46:06,170 --> 00:46:11,480
searching from like we did here and you

00:46:09,230 --> 00:46:15,770
remove so I can just copy this and paste

00:46:11,480 --> 00:46:18,290
it in here like that so again we're

00:46:15,770 --> 00:46:22,550
searching by this we can use async again

00:46:18,290 --> 00:46:24,860
here and let me just what are we copying

00:46:22,550 --> 00:46:29,300
let's just copy the catch here then I'll

00:46:24,860 --> 00:46:31,140
wrap it in a try-catch alright let's get

00:46:29,300 --> 00:46:35,470
rid of this

00:46:31,140 --> 00:46:39,460
so try and then we catch perfect so we

00:46:35,470 --> 00:46:44,170
get this let's store it somewhere Const

00:46:39,460 --> 00:46:46,450
updated post equal to you a wait post

00:46:44,170 --> 00:46:48,849
updated one so this is the one that we

00:46:46,450 --> 00:46:53,200
are gonna wait for now this takes

00:46:48,849 --> 00:46:56,440
another property here so we have this

00:46:53,200 --> 00:46:59,440
object that is the search criteria and

00:46:56,440 --> 00:47:03,910
the next one is gonna be another object

00:46:59,440 --> 00:47:07,539
that you wanna change a specific

00:47:03,910 --> 00:47:10,509
information so here what I wanted to is

00:47:07,539 --> 00:47:16,779
actually add something called dollar

00:47:10,509 --> 00:47:19,630
sign set okay and here you add a colon

00:47:16,779 --> 00:47:21,940
and another pair of objects here so this

00:47:19,630 --> 00:47:24,9
is this takes another object in here

00:47:21,940 --> 00:47:25,930
here what you would do is you just say

00:47:24,9 --> 00:47:27,789
maybe I want to change the title so I

00:47:25,930 --> 00:47:31,539
can see title and that's coming from

00:47:27,789 --> 00:47:33,99
request body title okay let's save so

00:47:31,539 --> 00:47:36,490
this is how it kinda looks we have

00:47:33,99 --> 00:47:41,650
updated one we have this and then we set

00:47:36,490 --> 00:47:45,539
the new value in here okay and finally

00:47:41,650 --> 00:47:48,579
what we do is in here we just say cost

00:47:45,539 --> 00:47:53,890
let's just output this actually I just

00:47:48,579 --> 00:47:56,769
say res dot JSON and then we post that

00:47:53,890 --> 00:47:59,950
updated post okay hit save and now we

00:47:56,769 --> 00:48:02,289
can go back here and I want let's say I

00:47:59,950 --> 00:48:05,589
want to change the title of the second

00:48:02,289 --> 00:48:09,549
post so I'm gonna copy this ID paste it

00:48:05,589 --> 00:48:13,29
in here I'm gonna switch to patch and

00:48:09,549 --> 00:48:15,789
now in my body I can just delete this

00:48:13,29 --> 00:48:18,579
and just update the title if I want so

00:48:15,789 --> 00:48:23,529
for the title I'm gonna just change this

00:48:18,579 --> 00:48:26,950
to you we are learning about backend

00:48:23,529 --> 00:48:28,569
stuff and hit Send let's take a look and

00:48:26,950 --> 00:48:31,809
as you can see we get back a response

00:48:28,569 --> 00:48:34,420
with it says and modified here and some

00:48:31,809 --> 00:48:36,519
other fun stuff that to be honest I

00:48:34,420 --> 00:48:38,920
truly I don't understand everything in

00:48:36,519 --> 00:48:40,990
here but hey it is what it is but at the

00:48:38,920 --> 00:48:42,820
end of the day if we go to get now and

00:48:40,990 --> 00:48:45,940
go to post and hit

00:48:42,820 --> 00:48:47,770
then we should get look we are learning

00:48:45,940 --> 00:48:51,370
about back-end stuff so that specific

00:48:47,770 --> 00:48:54,220
part of the code of the information

00:48:51,370 --> 00:48:56,80
updated and our description is still my

00:48:54,220 --> 00:48:58,930
love life is kind of not rain

00:48:56,80 --> 00:49:02,380
it's okay alright so there we go we did

00:48:58,930 --> 00:49:04,840
we wrote we got information we posted

00:49:02,380 --> 00:49:07,300
information we delete deleted

00:49:04,840 --> 00:49:09,100
information and everything all right so

00:49:07,300 --> 00:49:11,80
let's see how this can work and how we

00:49:09,100 --> 00:49:12,880
can use it actually in the browser so

00:49:11,80 --> 00:49:15,10
I'm gonna do this very quickly we're not

00:49:12,880 --> 00:49:16,480
gonna implement it in a react project if

00:49:15,10 --> 00:49:19,0
you want to see like how you can work

00:49:16,480 --> 00:49:21,490
with API is and stuff like that check

00:49:19,0 --> 00:49:24,310
out my react for beginners you should

00:49:21,490 --> 00:49:26,740
have that up there and I think we work

00:49:24,310 --> 00:49:28,60
with like two or three api's but for now

00:49:26,740 --> 00:49:30,280
let me just kind of give you an example

00:49:28,60 --> 00:49:32,380
what problem you might run into you once

00:49:30,280 --> 00:49:34,720
you have this server running so maybe

00:49:32,380 --> 00:49:36,760
here you would do something like let me

00:49:34,720 --> 00:49:38,920
zoom in here a bit so maybe I want to

00:49:36,760 --> 00:49:40,930
fetch that I want to fetch all the posts

00:49:38,920 --> 00:49:43,890
so the way we're doing here right I'm

00:49:40,930 --> 00:49:47,290
just gonna copy that I'm gonna say fetch

00:49:43,890 --> 00:49:50,350
so the posts in here and then you would

00:49:47,290 --> 00:49:55,660
get back the result and let's just call

00:49:50,350 --> 00:49:58,960
so log the result okay let's let's hit

00:49:55,660 --> 00:50:01,330
tab why you do this to me close up hit

00:49:58,960 --> 00:50:03,430
tab and we should this should not work

00:50:01,330 --> 00:50:05,530
okay it's gonna say access to fetch

00:50:03,430 --> 00:50:08,260
local those three thousand posts from

00:50:05,530 --> 00:50:11,500
origin code pan has been blocked by

00:50:08,260 --> 00:50:13,180
course policy No

00:50:11,500 --> 00:50:14,890
okay you're gonna have this problem a

00:50:13,180 --> 00:50:16,840
lot of times you're gonna have this

00:50:14,890 --> 00:50:19,60
error and you're gonna say why is this

00:50:16,840 --> 00:50:23,710
happening to my life and the reason why

00:50:19,60 --> 00:50:27,100
this is happening is because look if we

00:50:23,710 --> 00:50:30,550
are on localhost 3000 we are only able

00:50:27,100 --> 00:50:32,980
to make requests on localhost 3000 you

00:50:30,550 --> 00:50:35,620
can imagine this as I have my own API on

00:50:32,980 --> 00:50:41,50
dev ed calm and you have your own

00:50:35,620 --> 00:50:43,240
website on Julia Roberts calm okay Julia

00:50:41,50 --> 00:50:46,360
Roberts cannot make requests to my API

00:50:43,240 --> 00:50:49,900
on my domain because by default they

00:50:46,360 --> 00:50:54,100
have this access control origin blockage

00:50:49,900 --> 00:50:54,830
thing okay so this only works if again

00:50:54,100 --> 00:50:57,290
it you can

00:50:54,830 --> 00:51:00,470
imagine is I have my website that's

00:50:57,290 --> 00:51:02,900
David calm and I have my note server

00:51:00,470 --> 00:51:06,500
running there if I have my client code

00:51:02,900 --> 00:51:09,140
so my client react project on are still

00:51:06,500 --> 00:51:11,450
on David calm that everything is going

00:51:09,140 --> 00:51:14,750
to work fine but if I have my API on

00:51:11,450 --> 00:51:20,450
David calm and I have my react project

00:51:14,750 --> 00:51:22,460
on Judah is why am I saying Judah just

00:51:20,450 --> 00:51:26,180
another domain it's not gonna work okay

00:51:22,460 --> 00:51:29,660
you cannot do that cross domain fetching

00:51:26,180 --> 00:51:33,980
but we can fix that we can go back here

00:51:29,660 --> 00:51:37,970
to our our project and we can actually

00:51:33,980 --> 00:51:40,220
allow it to use across all the domains

00:51:37,970 --> 00:51:43,130
so we can install a package from this we

00:51:40,220 --> 00:51:48,440
can close up this with ctrl C Y and we

00:51:43,130 --> 00:51:49,480
can NPM install cores hit enter we're

00:51:48,440 --> 00:51:54,620
gonna wait a bit

00:51:49,480 --> 00:51:57,950
did 32 term all right once its installed

00:51:54,620 --> 00:52:01,460
all we have to do is that is just to add

00:51:57,950 --> 00:52:03,920
that middleware so let's go back to fjs

00:52:01,460 --> 00:52:06,500
here and we can do it let's do above

00:52:03,920 --> 00:52:08,120
here because we have our middlewares

00:52:06,500 --> 00:52:10,970
here middlewares

00:52:08,120 --> 00:52:13,100
and we're using the body parser and we

00:52:10,970 --> 00:52:15,50
can also use that course and all you

00:52:13,100 --> 00:52:17,510
have to do is just say AB dot use and

00:52:15,50 --> 00:52:19,940
you just say course and you invoke that

00:52:17,510 --> 00:52:21,650
function and that's it simple as that we

00:52:19,940 --> 00:52:24,650
can run the function and we can start up

00:52:21,650 --> 00:52:26,630
the server again npm start and let's

00:52:24,650 --> 00:52:26,990
let's take a look let's pray for the

00:52:26,630 --> 00:52:29,900
gods

00:52:26,990 --> 00:52:33,20
oh no course is not define okay we need

00:52:29,900 --> 00:52:38,690
to import it and what are you doing

00:52:33,20 --> 00:52:42,920
Const course equals require course yay

00:52:38,690 --> 00:52:43,580
hit save do you still hate me no okay he

00:52:42,920 --> 00:52:45,890
doesn't hate me

00:52:43,580 --> 00:52:50,330
let's go back to code pen and try this

00:52:45,890 --> 00:52:54,440
again hit refresh come on data come back

00:52:50,330 --> 00:52:54,980
to us why there we go we have the

00:52:54,440 --> 00:52:57,920
response

00:52:54,980 --> 00:52:59,90
Hey look at that we have the response

00:52:57,920 --> 00:53:02,330
everything works fine now

00:52:59,90 --> 00:53:05,600
so we can extract that by saying now if

00:53:02,330 --> 00:53:07,930
I just convert it to JSON here so I'm

00:53:05,600 --> 00:53:10,480
gonna return this resolved Jason and

00:53:07,930 --> 00:53:12,130
just console.log deep data we should

00:53:10,480 --> 00:53:14,500
have this let's take a look look at that

00:53:12,130 --> 00:53:16,510
we have the array with both of our

00:53:14,500 --> 00:53:19,210
objects and now we can work with this

00:53:16,510 --> 00:53:21,520
and use it in our HTML and there we go

00:53:19,210 --> 00:53:24,940
look we got the data from an external

00:53:21,520 --> 00:53:26,650
API that we created there we go we put

00:53:24,940 --> 00:53:28,990
together all three technologies to

00:53:26,650 --> 00:53:30,940
create a simple REST API let me know if

00:53:28,990 --> 00:53:32,200
you want to see user identification and

00:53:30,940 --> 00:53:34,270
things like that how we can hash

00:53:32,200 --> 00:53:38,860
passwords and if you want to see that I

00:53:34,270 --> 00:53:41,410
am here for you okay I'm here I'm I'm

00:53:38,860 --> 00:53:42,670
bored and I have nothing to do all right

00:53:41,410 --> 00:53:44,800
and let me know if you want to see other

00:53:42,670 --> 00:53:46,570
magic tricks because I have some more

00:53:44,800 --> 00:53:48,310
right there in the background that you

00:53:46,570 --> 00:53:50,340
cannot see it the first sure a lot of

00:53:48,310 --> 00:53:53,230
the magic tricks behind me happening so

00:53:50,340 --> 00:53:55,830
okay all right I'll see you next time

00:53:53,230 --> 00:53:55,830
have a great day

